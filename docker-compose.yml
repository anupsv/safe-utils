services:
  safe-utils:
    build:
      context: .
      args:
        - NODE_ENV=production

    # Security: Run as non-root user
    user: "1001:1001"

    # Security: Read-only root filesystem
    read_only: true

    # Security: Temporary filesystem for writable directories
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
      - /app/logs:noexec,nosuid,size=50m

    # Security: Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.5'

    # Security: Kernel capabilities
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE

    # Security: No new privileges
    security_opt:
      - no-new-privileges:true
      - seccomp:unconfined  # Allow for Node.js V8 engine

    # Security: AppArmor profile (if available)
    # security_opt:
    #   - apparmor:docker-default

    # Network configuration
    ports:
      - "3000:3000"

    # Environment variables
    environment:
      - NODE_ENV=production
      - NODE_OPTIONS=--max-old-space-size=512 --no-warnings --disable-proto=delete --disallow-code-generation-from-strings --frozen-intrinsics
      - NEXT_TELEMETRY_DISABLED=1
      - NO_UPDATE_NOTIFIER=1
      - FORCE_COLOR=0

    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

    # Restart policy
    restart: unless-stopped

    # Labels for monitoring
    labels:
      - "com.safe-utils.service=web"
      - "com.safe-utils.security=hardened"
      - "com.safe-utils.lavamoat=enabled"

  # Optional: Security scanner sidecar
  security-scanner:
    image: aquasec/trivy:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command:
      - image
      - safe-utils_safe-utils:latest
    depends_on:
      - safe-utils
    profiles:
      - security-scan

networks:
  default:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_icc: "false"
      com.docker.network.bridge.enable_ip_masquerade: "true"
      com.docker.network.bridge.host_binding_ipv4: "127.0.0.1"
